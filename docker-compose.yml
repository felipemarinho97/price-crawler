version: "3.7"
services:
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:pr-1282
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Recife
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
    network_mode: host
  
  redis:
    image: redis:6
    container_name: price-crawler-redis
    ports:
      - "6379:6379"
    networks:
      - price-crawler
    restart: unless-stopped
  
  requester:
    build:
      context: requester
      dockerfile: Dockerfile
    container_name: price-crawler-requester
    environment:
      - COOKIES_FILE=/cookies.txt
      - FLARESOLVERR_URL=${FLARESOLVERR_URL}
      - PROXY_URL=${PROXY_URL}
      - REDIS_URL=${REDIS_URL}
    volumes:
      - /home/darklyn/Projects/price-crawler/requester/cookies.txt:/cookies.txt
    ports:
      - "9080:9080"
    network_mode: host
    restart: unless-stopped
  
  parser:
    build:
      context: parser
      dockerfile: Dockerfile
    container_name: price-crawler-parser
    hostname: parser
    environment:
      - REQUESTER_URL=${REQUESTER_URL}
    ports:
      - "8080:8080"
    networks:
      - price-crawler
    restart: unless-stopped
  
  postgres:
    image: postgres:13
    container_name: price-crawler-postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=price_crawler
    ports:
      - "5434:5432"
    networks:
      - price-crawler
    volumes:
      - price-crawler:/var/lib/postgresql/data
    restart: unless-stopped
  
  data-bucket:
    build:
      context: data-bucket
      dockerfile: Dockerfile
    container_name: price-crawler-data-bucket
    hostname: data-bucket
    environment:
      - POSTGRES_URL=postgres://postgres:password@price-crawler-postgres:5432/price_crawler?sslmode=disable
    ports:
      - "9081:8080"
    networks:
      - price-crawler
    restart: unless-stopped

  watcher:
    build:
      context: watcher
      dockerfile: Dockerfile
    container_name: price-crawler-watcher
    hostname: watcher
    environment:
      - DATA_BUCKET_URL=${DATA_BUCKET_URL}
      - PARSER_URL=${PARSER_URL}
      - WATCHED_SEARCHES="https://www.terabyteshop.com.br/busca?str=placa+de+video+rtx+4070+super"
    ports:
      - "9083:9082"
    networks:
      - price-crawler
    restart: unless-stopped
  
  #### CRON JOBS ####
  ofelia:
    image: mcuadros/ofelia:latest
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-run.update-prices.schedule: '@every 4h'
      ofelia.job-run.update-prices.command: "curl -X POST http://watcher:9082/update-prices -d '{\"searchLinks\":[\"https://www.terabyteshop.com.br/busca?str=placa+de+video+rtx+4070+super\"]}'"
      ofelia.job-run.update-prices.image: curlimages/curl:latest
      ofelia.job-run.update-prices.network: price-crawler
    networks:
      - price-crawler

  #####################
  
  viewer:
    build:
      context: viewer
      dockerfile: Dockerfile
      args:
        - DATA_BUCKET_URL=${DATA_BUCKET_URL}
    container_name: price-crawler-viewer
    environment:
      - DATA_BUCKET_URL=${DATA_BUCKET_URL}
    ports:
      - "9090:80"
    restart: unless-stopped

networks:
  price-crawler: {}

volumes:
  price-crawler: {}